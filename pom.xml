<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.github.mincongh</groupId>
  <artifactId>hs-jsr352</artifactId>
  <version>5.6.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>Hibernate Search - JSR352</name>
  <description>New implementation mass-indexer using JSR 352</description>
  
  <properties>
    <org.jboss.arquillian.version>1.1.1.Final</org.jboss.arquillian.version>
    <org.wildfly>10.0.0.Final</org.wildfly>
    <org.wildfly.arquillian>8.2.1.Final</org.wildfly.arquillian>
    <org.jboss.shrinkwrap>2.2.2</org.jboss.shrinkwrap>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>
  
  <profiles>
    <profile>
      <id>perf</id>
      <properties>
        <org.hibernate.search.enable_performance_tests>true</org.hibernate.search.enable_performance_tests>
      </properties>
    </profile>
  </profiles>
  
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <version>1.1.11.Final</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>
  
  <dependencies>
  
        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-7.0</artifactId>
            <version>1.0.0.Final</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-search-orm</artifactId>
      <version>5.5.3.Final</version>
      <!-- 
      <exclusions>
        <exclusion>
          <groupId>dom4j</groupId>
          <artifactId>dom4j</artifactId>
        </exclusion>
      </exclusions>
       -->
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.batch</groupId>
      <artifactId>javax.batch-api</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>
    <!-- Not sure the version of EJB, this is provided by GlassFish -->
    <dependency>
      <groupId>javax.ejb</groupId>
      <artifactId>javax.ejb-api</artifactId>
      <version>3.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>
    <!-- tests -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
    </dependency>
    <!-- fix issue for starting managed WF using arquillian
         ~~~
         Stack Overflow â€¢ Run arquillian tests on jboss installed on remote cloud server
         http://stackoverflow.com/questions/20919156
     -->
    <dependency>
      <groupId>org.jboss.arquillian.protocol</groupId>
      <artifactId>arquillian-protocol-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>org.wildfly</groupId>
      <artifactId>wildfly-arquillian-container-managed</artifactId>
      <version>${org.wildfly.arquillian}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.jboss.logmanager</groupId>
          <artifactId>jboss-logmanager</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.jboss.logmanager</groupId>
          <artifactId>log4j-jboss-logmanager</artifactId>
        </exclusion>
        <!-- This exclusion is needed to be able to setup the project in Windows:
             it otherwise includes transitive dependency to the JDK JConsole -->
        <exclusion>
          <artifactId>wildfly-patching</artifactId>
          <groupId>org.wildfly</groupId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  
  <build>
    <finalName>${project.artifactId}-${project.version}</finalName>
    <!-- enable resources from arquillian configuration
         otherwise, the maven variables are unreadable for arquillian.xml
         ~~~
         newbie variable expansion in pom.xml and arquillian.xml
         https://developer.jboss.org/thread/230696?tstart=0
     -->
    <testResources>
      <testResource>
        <filtering>true</filtering>
        <directory>src/test/resources</directory>
        <includes>
          <include>**/arquillian.xml</include>
          <include>**/arquillian.launch</include>
        </includes>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <!-- Allows to find the absolute path to dependencies -->
        <groupId>org.bitstrings.maven.plugins</groupId>
        <artifactId>dependencypath-maven-plugin</artifactId>
        <version>1.1.1</version>
        <executions>
          <execution>
            <id>set-all</id>
            <goals>
              <goal>set</goal>
            </goals>
            <configuration>
            <propertySets>
              <propertySet>
                <includes>
                  <include>org.jboss.byteman:byteman:jar</include>
                </includes>
              </propertySet>
            </propertySets>
          </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <forkCount>1</forkCount>
          <reuseForks>true</reuseForks>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <runOrder>alphabetical</runOrder>
          <systemPropertyVariables>
            <!-- See HSEARCH-1444 -->
            <hibernate.service.allow_crawling>false</hibernate.service.allow_crawling>
            <com.sun.management.jmxremote>true</com.sun.management.jmxremote>
            <org.hibernate.search.enable_performance_tests>${org.hibernate.search.enable_performance_tests}</org.hibernate.search.enable_performance_tests>
          </systemPropertyVariables>
          <additionalClasspathElements>
            <!-- Needed by Byteman to load the agent on demand -->
            <additionalClasspathElement>${jdk-toolsjar}</additionalClasspathElement>
          </additionalClasspathElements>
        </configuration>
      </plugin>      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.17</version>
        <!-- enable execution to run an integration test -->
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.wildfly</groupId>
                  <artifactId>wildfly-dist</artifactId>
                  <version>${org.wildfly}</version>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/node1</outputDirectory>
                </artifactItem>
                <!-- Provide hibernate search modules to wildfly
                     because the modules are not enabled by default ?
                     or because we want to provide the current project
                     as a new slot beside the built-in HSEARCH modules ? -->
                <artifactItem>
                  <groupId>org.hibernate</groupId>
                  <artifactId>hibernate-search-modules</artifactId>
                  <version>${project.version}</version>
                  <classifier>wildfly-10-dist</classifier>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/node1/wildfly-${org.wildfly}/modules</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <!-- Copy the AS configuration files so we can use our custom configurations -->
          <execution>
            <id>configure-as-node-node1</id>
            <!-- <phase>pre-integration-test</phase> -->
            <!-- <phase>integration-test</phase> -->
            <phase>process-test-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/node1/wildfly-${org.wildfly}</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${basedir}/src/wildflyConfig</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
