<?xml version="1.0" encoding="UTF-8"?>
<job id="massIndex" xmlns="http://xmlns.jcp.org/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/jobXML_1_0.xsd"
    version="1.0">

    <listeners>
        <listener ref="batchJobContextSetupListener">
            <properties>
                <property name="rootEntities" value="#{jobParameters['rootEntities']}"/>
            </properties>
        </listener>
    </listeners>

  <step id="produceLuceneDoc" next="afterIndexDecision">
    <properties>
      <property name="javax.transaction.global.timeout" value="300"/>
    </properties>
    <listeners>
      <listener ref="entityIndexingStepContextSetupListener">
        <properties>
          <property name="entityType" value="#{partitionPlan['entityType']}"/>
        </properties>
      </listener>
    </listeners>
    <chunk item-count="3">
      <reader ref="batchItemReader">
        <properties>
          <property name="maxResults" value="#{jobParameters['maxResults']}?:10000000;"/>
          <property name="entityType" value="#{partitionPlan['entityType']}"/>
        </properties>
      </reader>
      <processor ref="batchItemProcessor"/>
      <writer ref="batchItemWriter">
        <properties>
          <property name="entityType" value="#{partitionPlan['entityType']}"/>
        </properties>
      </writer>
    </chunk>
    <partition>
      <mapper ref="lucenePartitionMapper">
        <properties>
          <property name="threads" value="#{jobParameters['threads']}?:2;"/>
        </properties>
      </mapper>
      <collector ref="lucenePartitionCollector"/>
      <analyzer ref="lucenePartitionAnalyzer">
        <properties>
          <property name="maxResults" value="#{jobParameters['maxResults']}?:2147483647;"/>
        </properties>
      </analyzer>
      <reducer ref="lucenePartitionReducer"/>
    </partition>
  </step>

  <decision id="afterIndexDecision" ref="afterIndexDecider">
    <properties>
      <property name="optimizeAtEnd" value="#{jobParameters['optimizeAtEnd']}?:false;"/>
    </properties>
    <next on="true" to="optimizeAfterIndex"/>
    <end on="false" exit-status=""/><!-- TODO: add exit-status -->
  </decision>

  <step id="optimizeAfterIndex">
    <batchlet ref="optimizerBatchlet"/>
  </step>
</job>
